{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "12790219085318733004"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westeurope"
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "JamsProjectV2"
    },
    "stgName": {
      "type": "string",
      "defaultValue": "xyzstorage"
    },
    "adminUsername1": {
      "type": "string",
      "defaultValue": "jamaltadrous"
    },
    "adminPassword1": {
      "type": "string",
      "defaultValue": "Techgr0und$"
    },
    "adminUsername2": {
      "type": "string",
      "defaultValue": "jamaltadrous"
    },
    "adminPassword2": {
      "type": "string",
      "defaultValue": "Techgr0und$",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "12423970503762685554"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "westeurope"
            }
          },
          "variables": {
            "resourceGroupName": "JamsProjectV2"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[variables('resourceGroupName')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "resoGroup": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[variables('resourceGroupName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "XYZkv",
      "resourceGroup": "JamsProjectV2",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "16523096064252900476"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "enabledForDeployment": {
              "type": "bool",
              "defaultValue": true
            },
            "enabledForTemplateDeployment": {
              "type": "bool",
              "defaultValue": true
            },
            "enabledForDiskEncryption": {
              "type": "bool",
              "defaultValue": true
            },
            "enableSoftDelete": {
              "type": "bool",
              "defaultValue": true
            },
            "enablePurgeProtection": {
              "type": "bool",
              "defaultValue": true
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "XYZkv9"
            },
            "tenantId": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]"
            },
            "objectId": {
              "type": "string",
              "defaultValue": "214bb771-fd30-4f8e-9dfc-7195f7b165ff",
              "metadata": {
                "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard"
              ],
              "metadata": {
                "description": "Specifies whether the key vault is a standard vault or a premium vault."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": {
                "projectv1": "jamaltadrous"
              },
              "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enableRbacAuthorization": false,
                "tenantId": "[parameters('tenantId')]",
                "enableSoftDelete": "[parameters('enableSoftDelete')]",
                "enablePurgeProtection": "[parameters('enablePurgeProtection')]",
                "softDeleteRetentionInDays": 7,
                "accessPolicies": [
                  {
                    "objectId": "[parameters('objectId')]",
                    "tenantId": "[parameters('tenantId')]",
                    "permissions": {
                      "keys": [
                        "all"
                      ],
                      "secrets": [
                        "all"
                      ],
                      "certificates": [
                        "all"
                      ],
                      "storage": [
                        "all"
                      ]
                    }
                  }
                ],
                "sku": {
                  "name": "[parameters('skuName')]",
                  "family": "A"
                },
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "XYZadmin",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'ssh')]",
              "properties": {
                "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAxV7VWxWjQAL5n0FUJTFpMrkp0iE/5YMKQTy496KDKPl3Ty7J\nlSCiRwGkBC5v8lYNyqhh4wFzMIK/rvMDl6M4nAVr9vOTuW3cJFjV0WDxpzoM1ab5\nj/IP/DUGnsIQRJqOQFw9trBdSXNSqRwQKyZW0/Wx22Uv/Hdp5YdQc6qTXCVcYqyW\nTRasC1pfTrVj1hl/De641hDu5YRSM5AjPmQiLaPzSNuoxxyMuCDK4Uoz2nYqHLTm\n5UwmQdFJp8twf1nZQZ3IwVdj63WjNVYwSYwuqwI5m8zq1KmIf16gMacn3Q0itZDJ\n6fdgwxrUICyciLQU4aPufaKN+3dgvsxnJ4V1LQIDAQABAoIBACHHKRx9h4Lc/3uR\n4qS64BYeOloL9rOAybCAg+ddmLTafODAUR+EhkFAtqFAkUgYEiQszRPcm6ohtkxq\nqqK4/Gc3RlLtPMrvUk2mJnG+9Zx5AtlNykgoVTQEny1saPxUtyOspaMua8i2Q99N\nPjckSJfd5KJ3ns7GYQk3Lz2cY7vRG7oJVhR/g2CAlVIJC/d1g7kpNRZaaJ6+RODL\n/uBhgnjwGAVu7qnJoWmaWBSramrNJER9gzZoqWEjPN4Zf9xTNyvanR1nUtmAzfOa\nHgytOHn0BojjysDdrTPlhEI2z5wygI/5i70oqPMAjD2E/ASkVaZoW4HwhMhE8Z3J\nExiyDsECgYEA+Jn1sBzR8ICtSyPErixPIftvbtys2qaAqTBR7GYlsPTggIj2O+jR\nBI7lbFviMMZt+S+v1NjLFqfe/vzG1aXjKSrCrNupaRQzMpGQX01N/RdG0tySNRwP\ns1vo4exoG7G+qThFq4qstWAyIEVua9g/77HPlcQ6+BQMQh89USJXXz8CgYEAyz6O\nXDH3f0jZ3VQ+io8Y/WwKGiTcQDm+jl/7ZDYW77SBU5UCjBNsgj6CixjdQnrYAcdd\nRXOVJsAA8eVNsKDJ3zhpsc7vtW92II/ePx5QVe6+rUywN/0QkHJHiveSoo9SM1Df\n2ZAgiG1IZnpN276wKsjkAZLI8EVqh18KgEA5PJMCgYBX/zdmVW1Csmmk9U5DUM/Z\n+YRiO5677sAQI1h8U1P4JVXqaZCveCO0d1hiWMvh8/stf2G/99U7ecSHgbZoHcYg\n5k/um/qFhW7x8XCnK1f1xG1/ajAeuIYeOORgRCw90Vbp009l/zpPIXPc1HbXmb5X\n/Bq8qq8s7PvB1AkCVSOURQKBgQCQdGHSfWEfgrP2b44UBSkJ1eRIOLKio2gg4W9Y\nBmm+7ViOA3bQAG47FBrMqlt4iL9GZGCSoFf+NrF1PDk/tMhGc14MFryhBBu9gQPB\ncNZAfXPg0ITfBmrjf5YB23zJNXyDJJQ1mg7FaIbw7zSvXpTvk+EajS1sOKpClPZt\nuTf1KQKBgC7xyAgMAi1bFnUdQbgNynaFMYS6CxR+1vvtHfULdCAexCPvE3juxS9z\nHkMY5iYEBuR5ouc64rxXHL6tTXCUCcHLbphg1clppyQ9QfUgR8n/HoccQChzqRHK\neAQgwJLgIjoSCL/E65guODaBzuMRpFF+2O7gu2EHbR1/CTvMyERC\n-----END RSA PRIVATE KEY-----\n"
              },
              "tags": {
                "projectv1": "jamaltadrous"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/keys",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'RSAKey')]",
              "properties": {
                "kty": "RSA",
                "keySize": 4096,
                "keyOps": [
                  "encrypt",
                  "decrypt",
                  "sign",
                  "unwrapKey",
                  "verify",
                  "wrapKey"
                ],
                "attributes": {
                  "enabled": true
                }
              },
              "tags": {
                "projectv1": "jamaltadrous"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/diskEncryptionSets",
              "apiVersion": "2021-08-01",
              "name": "dskEncrKeyV1",
              "location": "[parameters('location')]",
              "tags": {
                "projectv1": "jamaltadrous"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "rotationToLatestKeyVersionEnabled": true,
                "activeKey": {
                  "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), 'RSAKey')).keyUriWithVersion]",
                  "sourceVault": {
                    "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                  }
                },
                "encryptionType": "EncryptionAtRestWithCustomerKey"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), 'RSAKey')]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
              "properties": {
                "accessPolicies": [
                  {
                    "tenantId": "[parameters('tenantId')]",
                    "objectId": "[reference(resourceId('Microsoft.Compute/diskEncryptionSets', 'dskEncrKeyV1'), '2021-08-01', 'full').identity.principalId]",
                    "permissions": {
                      "keys": [
                        "all"
                      ],
                      "storage": [
                        "all"
                      ]
                    }
                  },
                  {
                    "tenantId": "[parameters('tenantId')]",
                    "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'XYZadmin')).principalId]",
                    "permissions": {
                      "keys": [
                        "all"
                      ],
                      "secrets": [
                        "all"
                      ],
                      "certificates": [
                        "all"
                      ],
                      "storage": [
                        "all"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/diskEncryptionSets', 'dskEncrKeyV1')]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'XYZadmin')]"
              ]
            }
          ],
          "outputs": {
            "KeyvaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))).vaultUri]"
            },
            "mngId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'XYZadmin')]"
            },
            "keyvaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "proxyKey": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), 'RSAKey'), '2021-10-01', 'full')]"
            },
            "objectId": {
              "type": "string",
              "value": "[parameters('objectId')]"
            },
            "dskEncrKey": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/diskEncryptionSets', 'dskEncrKeyV1')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('stgName')]",
      "resourceGroup": "JamsProjectV2",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('stgName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "KeyvaultUri": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', 'XYZkv')).outputs.KeyvaultUri.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "7136558545912663982"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "defaultValue": "xyzstorage"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "KeyvaultUri": {
              "type": "string"
            },
            "containerName": {
              "type": "string",
              "defaultValue": "logs"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]",
              "metadata": {
                "description": "UTC timestamp used to create distinct deployment scripts for each deployment"
              }
            },
            "filename": {
              "type": "string",
              "defaultValue": "webserver.sh"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_RAGRS"
              },
              "kind": "StorageV2",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'XYZadmin'))]": {}
                }
              },
              "properties": {
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "identity": {
                    "userAssignedIdentity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'XYZadmin')]"
                  },
                  "requireInfrastructureEncryption": false,
                  "keyvaultproperties": {
                    "keyvaulturi": "[parameters('KeyvaultUri')]",
                    "keyname": "encryptkeyall"
                  },
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "table": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "queue": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Keyvault"
                },
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "properties": {
                "changeFeed": {
                  "enabled": false
                },
                "restorePolicy": {
                  "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "isVersioningEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', format('{0}container', parameters('storageAccountName')))]",
              "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Compute/disks",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}', parameters('storageAccountName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "creationData": {
                  "createOption": "Empty"
                },
                "diskSizeGB": 4,
                "networkAccessPolicy": "AllowAll"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[format('deployscript-upload-blob-{0}', parameters('utcValue'))]",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.26.1",
                "timeout": "PT5M",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "AZURE_STORAGE_ACCOUNT",
                    "value": "[parameters('storageAccountName')]"
                  },
                  {
                    "name": "AZURE_STORAGE_KEY",
                    "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-04-01').keys[0].value]"
                  },
                  {
                    "name": "CONTENT",
                    "value": "IyEvYmluL2Jhc2gNCnN1ZG8gc3UNCmFwdCB1cGRhdGUNCmFwdCBpbnN0YWxsIGFwYWNoZTIgLXkNCnVmdyBhbGxvdyAnQXBhY2hlJw0Kc3lzdGVtY3RsIGVuYWJsZSBhcGFjaGUyDQpzeXN0ZW1jdGwgcmVzdGFydCBhcGFjaGUy"
                  }
                ],
                "scriptContent": "[format('echo $CONTENT | base64 -d > {0} && az storage blob upload -f {1} -c {2} -n {3}', parameters('filename'), parameters('filename'), parameters('containerName'), parameters('filename'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "disc": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/disks', format('{0}', parameters('storageAccountName')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', 'XYZkv')]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "ADMINSERVER",
      "resourceGroup": "JamsProjectV2",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminUsername1": {
            "value": "[parameters('adminUsername1')]"
          },
          "adminPassword1": {
            "value": "[parameters('adminPassword1')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "9310597210543846219"
            }
          },
          "parameters": {
            "adminvmName": {
              "type": "string",
              "defaultValue": "adminserv"
            },
            "adminUsername1": {
              "type": "string"
            },
            "adminPassword1": {
              "type": "secureString",
              "minLength": 6,
              "metadata": {
                "description": "Password for the Virtual Machine."
              }
            },
            "OSVersion": {
              "type": "string",
              "defaultValue": "2019-Datacenter",
              "allowedValues": [
                "2019-Datacenter"
              ],
              "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
              }
            },
            "vmSize1": {
              "type": "string",
              "defaultValue": "Standard_B1s"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "dnsLabelPrefix1": {
              "type": "string",
              "defaultValue": "[toLower(format('adminManage-vm-{0}', uniqueString(resourceGroup().id)))]"
            },
            "vnet1Name": {
              "type": "string",
              "defaultValue": "management-prd-vnet",
              "metadata": {
                "description": "Name for vNet 1"
              }
            },
            "nicName1": {
              "type": "string",
              "defaultValue": "adminnic"
            }
          },
          "variables": {
            "vnet1Config": {
              "addressSpacePrefix": "10.10.0.0/16",
              "subnetName": "admsubnet",
              "subnetPrefix": "10.10.0.0/24"
            },
            "nsgName": "adminNSG",
            "publicIPAddressName": "AdminPublicIP"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-05-01",
              "name": "[parameters('vnet1Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('vnet1Config').addressSpacePrefix]"
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', parameters('vnet1Name'), variables('vnet1Config').subnetName)]",
              "properties": {
                "addressPrefix": "[variables('vnet1Config').subnetPrefix]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                },
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.KeyVault"
                  },
                  {
                    "service": "Microsoft.Storage"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet1Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-02-01",
              "name": "[parameters('nicName1')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet1Name'), variables('vnet1Config').subnetName)]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet1Name'), variables('vnet1Config').subnetName)]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-06-01",
              "name": "[variables('nsgName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "SSH",
                    "properties": {
                      "priority": 1000,
                      "protocol": "Tcp",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "22"
                    }
                  },
                  {
                    "name": "RDP",
                    "properties": {
                      "description": "rdp-rule",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 300,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[variables('publicIPAddressName')]",
              "location": "[parameters('location')]",
              "zones": [
                "1"
              ],
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                  "domainNameLabel": "[parameters('dnsLabelPrefix1')]"
                },
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-03-01",
              "name": "[parameters('adminvmName')]",
              "location": "[parameters('location')]",
              "zones": [
                "1"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize1')]"
                },
                "osProfile": {
                  "computerName": "[parameters('adminvmName')]",
                  "adminUsername": "[parameters('adminUsername1')]",
                  "adminPassword": "[parameters('adminPassword1')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "[parameters('OSVersion')]",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "adminvmstorage",
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "StandardSSD_LRS"
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName1'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName1'))]"
              ]
            }
          ],
          "outputs": {
            "admVmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('adminvmName'))]"
            },
            "admVmName": {
              "type": "string",
              "value": "[parameters('adminvmName')]"
            },
            "hostname": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn]"
            },
            "nic1": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName1'))]"
            },
            "nsg1": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            },
            "vnet1Name": {
              "type": "string",
              "value": "[parameters('vnet1Name')]"
            },
            "admsubId1": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet1Name'), variables('vnet1Config').subnetName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', 'XYZkv')]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', parameters('stgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "WEBSERVER",
      "resourceGroup": "JamsProjectV2",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adminUsername2": {
            "value": "[parameters('adminUsername2')]"
          },
          "adminPassword2": {
            "value": "[parameters('adminPassword2')]"
          },
          "dskEncrKey": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', 'XYZkv')).outputs.dskEncrKey.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "13492540284026540425"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "virtualNetworkName": {
              "type": "string",
              "defaultValue": "app-prod-vnet"
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.20.20.0/16"
            },
            "subnetName": {
              "type": "string",
              "defaultValue": "ApplicationGatewaySubnet"
            },
            "subnetPrefix": {
              "type": "string",
              "defaultValue": "10.20.20.0/24"
            },
            "applicationGatewayName": {
              "type": "string",
              "defaultValue": "applicationGatewayV2"
            },
            "minCapacity": {
              "type": "int",
              "defaultValue": 1
            },
            "maxCapacity": {
              "type": "int",
              "defaultValue": 3
            },
            "backendIPAddresses": {
              "type": "array",
              "defaultValue": [
                {
                  "IpAddress": "10.20.20.4"
                },
                {
                  "IpAddress": "10.20.20.5"
                }
              ]
            },
            "nsgName": {
              "type": "string",
              "defaultValue": "webNSG"
            },
            "adminUsername2": {
              "type": "string"
            },
            "adminPassword2": {
              "type": "string"
            },
            "dskEncrKey": {
              "type": "string"
            },
            "WebVMssName": {
              "type": "string",
              "defaultValue": "WebVMss"
            }
          },
          "variables": {
            "appGwPublicIpName": "[format('{0}-pip', parameters('applicationGatewayName'))]",
            "appGwSize": "Standard_v2",
            "bePoolName": "[format('{0}bepool', parameters('WebVMssName'))]",
            "nicname": "[format('{0}nic', parameters('WebVMssName'))]",
            "ipConfigName": "[format('{0}ipconfig', parameters('WebVMssName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[parameters('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[parameters('subnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('subnetPrefix')]",
                      "networkSecurityGroup": {
                        "properties": {
                          "securityRules": [
                            {
                              "properties": {
                                "direction": "Inbound",
                                "protocol": "*",
                                "access": "Allow"
                              }
                            },
                            {
                              "properties": {
                                "direction": "Outbound",
                                "protocol": "*",
                                "access": "Allow"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-06-01",
              "name": "[variables('appGwPublicIpName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2020-06-01",
              "name": "[parameters('applicationGatewayName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "[variables('appGwSize')]",
                  "tier": "[variables('appGwSize')]"
                },
                "autoscaleConfiguration": {
                  "minCapacity": "[parameters('minCapacity')]",
                  "maxCapacity": "[parameters('maxCapacity')]"
                },
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                      }
                    }
                  }
                ],
                "sslCertificates": [
                  {
                    "name": "[format('{0}SslCert', parameters('applicationGatewayName'))]",
                    "properties": {
                      "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREF6TVFzd0NRWURWUVFHRXdKT1RERVcKTUJRR0ExVUVDQk1OVG05eWRHZ3RTRzlzYkdGdVpERU1NQW9HQTFVRUNoTURXRmxhTUI0WERUSXlNRE15T0RFeApNell3TUZvWERUTXlNRE15T0RFeE16WXdNRm93TXpFTE1Ba0dBMVVFQmhNQ1Rrd3hGakFVQmdOVkJBZ1REVTV2CmNuUm9MVWh2Ykd4aGJtUXhEREFLQmdOVkJBb1RBMWhaV2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU1WZTFWc1ZvMEFDK1o5QlZDVXhhVEs1S2RJaFArV0RDa0U4dVBlaWd5ajVkMDh1eVpVZwpva2NCcEFRdWIvSldEY3FvWWVNQmN6Q0N2Njd6QTVlak9Kd0ZhL2J6azdsdDNDUlkxZEZnOGFjNkROV20rWS95CkQvdzFCcDdDRUVTYWprQmNQYmF3WFVselVxa2NFQ3NtVnRQMXNkdGxML3gzYWVXSFVIT3FrMXdsWEdLc2xrMFcKckF0YVgwNjFZOVlaZnczdXVOWVE3dVdFVWpPUUl6NWtJaTJqODBqYnFNY2NqTGdneXVGS005cDJLaHkwNXVWTQpKa0hSU2FmTGNIOVoyVUdkeU1GWFkrdDFvelZXTUVtTUxxc0NPWnZNNnRTcGlIOWVvREduSjkwTklyV1F5ZW4zCllNTWExQ0FzbklpMEZPR2o3bjJpamZ0M1lMN01aeWVGZFMwQ0F3RUFBYU55TUhBd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVpdzQ3WUI3VXkrY1pOVXN1SlpsQWEvaW5VQUF3Q3dZRFZSMFBCQVFEQWdFRwpNQkVHQ1dDR1NBR0crRUlCQVFRRUF3SUFCekFlQmdsZ2hrZ0JodmhDQVEwRUVSWVBlR05oSUdObGNuUnBabWxqCllYUmxNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNqc2FzalZhY0pNQkZWYWtuRnNJVnh0TkdGZmw2ODVEd2kKc2NlNFVGREJBdng3M1FMb3REbERYU09Da1E2Ri9PZytZaWR2NFRTZDhOanB4WFo2SW1sR3RMMVRDRDdFYW1MQgp1dm9GWkZoVWI0a3lTc01UUTFIdUo4ZzlJZHlHQll0RjJBaGtVNEQ2UktGSTErREE5VFpCYmd0VGJKWHcvTWZMCmhzblFqZDQzQ0lPYk5XMzFUbFZlQW0yUVhyY3hJQkFBaTZyb3h3YVJoNlhZUlpYdmp5LzlNdndEcHNtamUzVHIKSStwZEliUXdiNnVRYzBtbDVDZWplTVNuemhpdkdsWkRtNkNzOHkvOFdFbmhlZzZtWjVYWjNacUtYK3Q2bERSQwovY3B2ZXYxQXV4aEVVNVRUbUFqOC83S1BSdTkvZFA2bWVsMVNodlJCYnhqbnI2VFA3WlFXCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                      "password": "[parameters('adminPassword2')]"
                    }
                  }
                ],
                "authenticationCertificates": [],
                "frontendIPConfigurations": [
                  {
                    "name": "appGatewayFrontendIP",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "appGatewayFrontendPort",
                    "properties": {
                      "port": 443
                    }
                  },
                  {
                    "name": "httpPort",
                    "properties": {
                      "port": 80
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "appGatewayBackendPool",
                    "properties": {
                      "backendAddresses": "[parameters('backendIPAddresses')]"
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "appGatewayBackendHttpSettings",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "cookieBasedAffinity": "Disabled",
                      "connectionDraining": {
                        "enabled": false,
                        "drainTimeoutInSec": 1
                      },
                      "pickHostNameFromBackendAddress": false,
                      "requestTimeout": 30
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "appGatewayHttpListener",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations/', parameters('applicationGatewayName'), 'appGatewayFrontendIP')]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/', parameters('applicationGatewayName'), 'appGatewayFrontendPort')]"
                      },
                      "protocol": "Https",
                      "sslCertificate": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates/', parameters('applicationGatewayName'), format('{0}SslCert', parameters('applicationGatewayName')))]"
                      },
                      "hostNames": [],
                      "requireServerNameIndication": false
                    }
                  },
                  {
                    "name": "myListener",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations/', parameters('applicationGatewayName'), 'appGatewayFrontendIP')]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/', parameters('applicationGatewayName'), 'httpPort')]"
                      },
                      "protocol": "Http",
                      "hostNames": [],
                      "requireServerNameIndication": false
                    }
                  }
                ],
                "urlPathMaps": [],
                "requestRoutingRules": [
                  {
                    "name": "rule1",
                    "properties": {
                      "ruleType": "Basic",
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', parameters('applicationGatewayName'), 'appGatewayHttpListener')]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/', parameters('applicationGatewayName'), 'appGatewayBackendPool')]"
                      },
                      "backendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection/', parameters('applicationGatewayName'), 'appGatewayBackendHttpSettings')]"
                      }
                    }
                  },
                  {
                    "name": "rule2",
                    "properties": {
                      "ruleType": "Basic",
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', parameters('applicationGatewayName'), 'myListener')]"
                      },
                      "redirectConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/redirectConfigurations/', parameters('applicationGatewayName'), 'httpToHttps')]"
                      }
                    }
                  }
                ],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [
                  {
                    "name": "httpToHttps",
                    "properties": {
                      "redirectType": "Permanent",
                      "targetListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/', parameters('applicationGatewayName'), 'appGatewayHttpListener')]"
                      },
                      "includePath": true,
                      "includeQueryString": true,
                      "requestRoutingRules": [
                        {
                          "id": "[resourceId('Microsoft.Network/applicationGateways/requestRoutingRules/', parameters('applicationGatewayName'), 'rule2')]"
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('subnetName'))]",
              "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                },
                "serviceEndpoints": [
                  {
                    "service": "Microsoft.KeyVault"
                  },
                  {
                    "service": "Microsoft.Storage"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-06-01",
              "name": "webnic1",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig2",
                    "properties": {
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                      },
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGwPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-06-01",
              "name": "[parameters('nsgName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "HTTP",
                    "properties": {
                      "description": "HTTP-rule",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 700,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "HTTPS",
                    "properties": {
                      "description": "HTTPS-rule",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 500,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "rdp",
                    "properties": {
                      "description": "rdp-rule",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3389",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 300,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "ssh",
                    "properties": {
                      "description": "ssh-rule",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "22",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 200,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "GatewayManager",
                    "properties": {
                      "description": "GatewayManager",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachineScaleSets",
              "apiVersion": "2020-06-01",
              "name": "[parameters('WebVMssName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_B1s",
                "tier": "Standard"
              },
              "properties": {
                "overprovision": true,
                "upgradePolicy": {
                  "mode": "Automatic"
                },
                "virtualMachineProfile": {
                  "storageProfile": {
                    "osDisk": {
                      "name": "webvmstorage",
                      "osType": "Linux",
                      "createOption": "FromImage",
                      "caching": "ReadWrite",
                      "managedDisk": {
                        "storageAccountType": "StandardSSD_LRS",
                        "diskEncryptionSet": {
                          "id": "[parameters('dskEncrKey')]"
                        }
                      }
                    },
                    "imageReference": {
                      "publisher": "canonical",
                      "offer": "UbuntuServer",
                      "sku": "18.04-LTS",
                      "version": "latest"
                    }
                  },
                  "extensionProfile": {
                    "extensions": [
                      {
                        "name": "HealthExtension",
                        "properties": {
                          "autoUpgradeMinorVersion": true,
                          "publisher": "Microsoft.ManagedServices",
                          "type": "ApplicationHealthLinux",
                          "typeHandlerVersion": "1.0",
                          "settings": {
                            "protocol": "http",
                            "port": 80,
                            "requestPath": "/"
                          }
                        }
                      }
                    ]
                  },
                  "osProfile": {
                    "computerNamePrefix": "[parameters('WebVMssName')]",
                    "adminUsername": "[parameters('adminUsername2')]",
                    "adminPassword": "[parameters('adminPassword2')]",
                    "customData": "IyEvYmluL2Jhc2gNCnN1ZG8gc3UNCmFwdCB1cGRhdGUNCmFwdCBpbnN0YWxsIGFwYWNoZTIgLXkNCnVmdyBhbGxvdyAnQXBhY2hlJw0Kc3lzdGVtY3RsIGVuYWJsZSBhcGFjaGUyDQpzeXN0ZW1jdGwgcmVzdGFydCBhcGFjaGUy",
                    "linuxConfiguration": {
                      "disablePasswordAuthentication": true,
                      "ssh": {
                        "publicKeys": [
                          {
                            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername2'))]",
                            "keyData": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeFY3Vld4V2pRQUw1bjBGVUpURnBNcmtwMGlFLzVZTUtRVHk0OTZLREtQbDNUeTdKCmxTQ2lSd0drQkM1djhsWU55cWhoNHdGek1JSy9ydk1EbDZNNG5BVnI5dk9UdVczY0pGalYwV0R4cHpvTTFhYjUKai9JUC9EVUduc0lRUkpxT1FGdzl0ckJkU1hOU3FSd1FLeVpXMC9XeDIyVXYvSGRwNVlkUWM2cVRYQ1ZjWXF5VwpUUmFzQzFwZlRyVmoxaGwvRGU2NDFoRHU1WVJTTTVBalBtUWlMYVB6U051b3h4eU11Q0RLNFVvejJuWXFITFRtCjVVd21RZEZKcDh0d2YxblpRWjNJd1ZkajYzV2pOVll3U1l3dXF3STVtOHpxMUttSWYxNmdNYWNuM1EwaXRaREoKNmZkZ3d4clVJQ3ljaUxRVTRhUHVmYUtOKzNkZ3ZzeG5KNFYxTFFJREFRQUJBb0lCQUNISEtSeDloNExjLzN1Ugo0cVM2NEJZZU9sb0w5ck9BeWJDQWcrZGRtTFRhZk9EQVVSK0Voa0ZBdHFGQWtVZ1lFaVFzelJQY202b2h0a3hxCnFxSzQvR2MzUmxMdFBNcnZVazJtSm5HKzlaeDVBdGxOeWtnb1ZUUUVueTFzYVB4VXR5T3NwYU11YThpMlE5OU4KUGpja1NKZmQ1S0ozbnM3R1lRazNMejJjWTd2Ukc3b0pWaFIvZzJDQWxWSUpDL2QxZzdrcE5SWmFhSjYrUk9ETAovdUJoZ25qd0dBVnU3cW5Kb1dtYVdCU3JhbXJOSkVSOWd6Wm9xV0VqUE40WmY5eFROeXZhblIxblV0bUF6Zk9hCkhneXRPSG4wQm9qanlzRGRyVFBsaEVJMno1d3lnSS81aTcwb3FQTUFqRDJFL0FTa1ZhWm9XNEh3aE1oRThaM0oKRXhpeURzRUNnWUVBK0puMXNCelI4SUN0U3lQRXJpeFBJZnR2YnR5czJxYUFxVEJSN0dZbHNQVGdnSWoyTytqUgpCSTdsYkZ2aU1NWnQrUyt2MU5qTEZxZmUvdnpHMWFYaktTckNyTnVwYVJRek1wR1FYMDFOL1JkRzB0eVNOUndQCnMxdm80ZXhvRzdHK3FUaEZxNHFzdFdBeUlFVnVhOWcvNzdIUGxjUTYrQlFNUWg4OVVTSlhYejhDZ1lFQXl6Nk8KWERIM2YwalozVlEraW84WS9Xd0tHaVRjUURtK2psLzdaRFlXNzdTQlU1VUNqQk5zZ2o2Q2l4amRRbnJZQWNkZApSWE9WSnNBQThlVk5zS0RKM3pocHNjN3Z0VzkySUkvZVB4NVFWZTYrclV5d04vMFFrSEpIaXZlU29vOVNNMURmCjJaQWdpRzFJWm5wTjI3NndLc2prQVpMSThFVnFoMThLZ0VBNVBKTUNnWUJYL3pkbVZXMUNzbW1rOVU1RFVNL1oKK1lSaU81Njc3c0FRSTFoOFUxUDRKVlhxYVpDdmVDTzBkMWhpV012aDgvc3RmMkcvOTlVN2VjU0hnYlpvSGNZZwo1ay91bS9xRmhXN3g4WENuSzFmMXhHMS9hakFldUlZZU9PUmdSQ3c5MFZicDAwOWwvenBQSVhQYzFIYlhtYjVYCi9CcThxcThzN1B2QjFBa0NWU09VUlFLQmdRQ1FkR0hTZldFZmdyUDJiNDRVQlNrSjFlUklPTEtpbzJnZzRXOVkKQm1tKzdWaU9BM2JRQUc0N0ZCck1xbHQ0aUw5R1pHQ1NvRmYrTnJGMVBEay90TWhHYzE0TUZyeWhCQnU5Z1FQQgpjTlpBZlhQZzBJVGZCbXJqZjVZQjIzekpOWHlESkpRMW1nN0ZhSWJ3N3pTdlhwVHZrK0VhalMxc09LcENsUFp0CnVUZjFLUUtCZ0M3eHlBZ01BaTFiRm5VZFFiZ055bmFGTVlTNkN4UisxdnZ0SGZVTGRDQWV4Q1B2RTNqdXhTOXoKSGtNWTVpWUVCdVI1b3VjNjRyeFhITDZ0VFhDVUNjSExicGhnMWNscHB5UTlRZlVnUjhuL0hvY2NRQ2h6cVJISwplQVFnd0pMZ0lqb1NDTC9FNjVndU9EYUJ6dU1ScEZGKzJPN2d1MkVIYlIxL0NUdk15RVJDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                          }
                        ]
                      }
                    }
                  },
                  "networkProfile": {
                    "networkInterfaceConfigurations": [
                      {
                        "name": "[variables('nicname')]",
                        "properties": {
                          "primary": true,
                          "ipConfigurations": [
                            {
                              "name": "[variables('ipConfigName')]",
                              "properties": {
                                "subnet": {
                                  "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), parameters('subnetName'))]"
                                },
                                "primary": true,
                                "applicationGatewayBackendAddressPools": [
                                  {
                                    "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/', parameters('applicationGatewayName'), variables('bePoolName'))]"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                "automaticRepairsPolicy": {
                  "enabled": true,
                  "gracePeriod": "PT10M"
                },
                "platformFaultDomainCount": 1
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/autoscalesettings",
              "apiVersion": "2015-04-01",
              "name": "cpuautoscale",
              "location": "[parameters('location')]",
              "properties": {
                "name": "cpuautoscale",
                "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('WebVMssName'))]",
                "enabled": true,
                "profiles": [
                  {
                    "name": "vmScaleSettings",
                    "capacity": {
                      "minimum": "1",
                      "maximum": "3",
                      "default": "1"
                    },
                    "rules": [
                      {
                        "metricTrigger": {
                          "metricName": "Percentage CPU",
                          "metricNamespace": "",
                          "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('WebVMssName'))]",
                          "timeGrain": "PT1M",
                          "timeWindow": "PT5M",
                          "timeAggregation": "Average",
                          "operator": "GreaterThan",
                          "threshold": 70,
                          "statistic": "Average"
                        },
                        "scaleAction": {
                          "direction": "Increase",
                          "type": "ChangeCount",
                          "value": "1",
                          "cooldown": "PT5M"
                        }
                      },
                      {
                        "metricTrigger": {
                          "metricName": "Percentage CPU",
                          "metricNamespace": "",
                          "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('WebVMssName'))]",
                          "timeGrain": "PT1M",
                          "timeWindow": "PT5M",
                          "timeAggregation": "Average",
                          "operator": "LessThan",
                          "threshold": 30,
                          "statistic": "Average"
                        },
                        "scaleAction": {
                          "direction": "Decrease",
                          "type": "ChangeCount",
                          "value": "1",
                          "cooldown": "PT5M"
                        }
                      },
                      {
                        "scaleAction": {
                          "cooldown": "PT5M",
                          "direction": "Increase",
                          "type": "ChangeCount",
                          "value": "1"
                        },
                        "metricTrigger": {
                          "metricName": "CurrentConnections",
                          "metricResourceUri": "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]",
                          "operator": "GreaterThan",
                          "statistic": "Sum",
                          "threshold": 2500,
                          "timeAggregation": "Average",
                          "timeGrain": "PT1M",
                          "timeWindow": "PT5M",
                          "dividePerInstance": true
                        }
                      },
                      {
                        "scaleAction": {
                          "cooldown": "PT5M",
                          "direction": "Decrease",
                          "type": "ChangeCount",
                          "value": "1"
                        },
                        "metricTrigger": {
                          "metricName": "CurrentConnections",
                          "metricResourceUri": "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]",
                          "operator": "LessThanOrEqual",
                          "statistic": "Sum",
                          "threshold": 2500,
                          "timeAggregation": "Average",
                          "timeGrain": "PT1M",
                          "timeWindow": "PT10M",
                          "dividePerInstance": true
                        }
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]",
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('WebVMssName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', 'XYZkv')]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', parameters('stgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "VNETpeering",
      "resourceGroup": "JamsProjectV2",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "10585403751474340702"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-05-01",
              "name": "[format('{0}/{1}', 'management-prd-vnet', format('{0}-{1}', 'management-prd-vnet', 'app-prod-vnet'))]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', 'app-prod-vnet')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-05-01",
              "name": "[format('{0}/{1}', 'app-prod-vnet', format('{0}-{1}', 'app-prod-vnet', 'management-prd-vnet'))]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', 'management-prd-vnet')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', 'ADMINSERVER')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'JamsProjectV2'), 'Microsoft.Resources/deployments', 'WEBSERVER')]"
      ]
    }
  ]
}